import { Node } from '../../../three-types'
// This is an internal class for the renderer.
import WebGPUUtils from 'three/src/renderers/webgpu/utils/WebGPUConstants'
export * from 'three/src/renderers/webgpu/WebGLUtils.js'
import { Three } from '../../../lib/3/three'
import { consParams } from '../../../lib/3/consParams'
import { objProps } from '../../../lib/3/objProps'
import { defaults } from '../../../lib/3/defaults'

declare module '../../../lib/3/three'
{
	interface Three {
		WebGPUUtils: typeof WebGPUUtils
	}
}

Three.WebGPUUtils = WebGPUUtils

declare module 'woby' {
	namespace JSX {
		interface IntrinsicElements {
			webGPUUtils: WebGPUUtilsProps,
		}
	}
}

declare module '../../../lib/3/consParams' {
	interface consParams {
		webGPUUtils: typeof webGPUUtils
	}
}

declare module '../../../lib/3/objProps' {
	interface objProps {
		webGPUUtils: typeof _webGPUUtils
	}
}

// ---[ Constructor Parameters ]---

// The constructor takes a WebGPUBackend instance.
const webGPUUtils = ([
	'backend',
] as const).distinct()
consParams.webGPUUtils = webGPUUtils

// ---[ Object Properties ]---

// Lists the instance properties and methods.
const _webGPUUtils = ([
	'backend',
	'getCurrentDepthStencilFormat',
	'getTextureFormatGPU',
	'getTextureSampleData',
	'getCurrentColorFormat',
	'getCurrentColorSpace',
	'getPrimitiveTopology',
	'getSampleCount',
	'getSampleCountRenderContext',
	'getPreferredCanvasFormat',
] as const).distinct()
objProps.webGPUUtils = _webGPUUtils


// ---[ Props & Defaults ]---

// Defines the constructor arguments.
type WebGPUUtilsArgs = {
	backend: any // Type must be WebGPUBackend.  Avoid circular dependency
}

// The final Props type for the JSX component.
export type WebGPUUtilsProps = Node<WebGLUtils, typeof WebGPUUtils, WebGPUUtilsArgs>

declare module '../../../lib/3/defaults' {
	interface defaults {
		webGPUUtils: Partial<WebGLUtilsArgs>
	}
}

// The 'backend' argument is required, so the defaults object is empty.
defaults.webGPUUtils = {}