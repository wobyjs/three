/** @jsxImportSource ../jsx-runtime */
export declare const components: {
    canvas3D: string;
    booleanKeyframeTrack: string;
    colorKeyframeTrack: string;
    numberKeyframeTrack: string;
    quaternionKeyframeTrack: string;
    stringKeyframeTrack: string;
    vectorKeyframeTrack: string;
    animationAction: string;
    animationClip: string;
    animationMixer: string;
    animationObjectGroup: string;
    animationUtils: string;
    keyframeTrack: string;
    propertyBinding: string;
    propertyMixer: string;
    audio: string;
    audioAnalyser: string;
    audioListener: string;
    positionalAudio: string;
    arrayCamera: string;
    camera: string;
    cubeCamera: string;
    orthographicCamera: string;
    perspectiveCamera: string;
    stereoCamera: string;
    bufferAttribute: string;
    bufferGeometry: string;
    clock: string;
    eventDispatcher: string;
    glBufferAttribute: string;
    instancedBufferAttribute: string;
    instancedBufferGeometry: string;
    instancedInterleavedBuffer: string;
    interleavedBuffer: string;
    interleavedBufferAttribute: string;
    layers: string;
    object3D: string;
    raycaster: string;
    renderTarget: string;
    uniform: string;
    uniformsGroup: string;
    curve: string;
    curvePath: string;
    path: string;
    shape: string;
    shapePath: string;
    arcCurve: string;
    catmullRomCurve3: string;
    cubicBezierCurve: string;
    cubicBezierCurve3: string;
    ellipseCurve: string;
    lineCurve: string;
    lineCurve3: string;
    quadraticBezierCurve: string;
    quadraticBezierCurve3: string;
    splineCurve: string;
    boxGeometry: string;
    capsuleGeometry: string;
    circleGeometry: string;
    coneGeometry: string;
    cylinderGeometry: string;
    dodecahedronGeometry: string;
    edgesGeometry: string;
    extrudeGeometry: string;
    icosahedronGeometry: string;
    latheGeometry: string;
    octahedronGeometry: string;
    planeGeometry: string;
    polyhedronGeometry: string;
    ringGeometry: string;
    shapeGeometry: string;
    sphereGeometry: string;
    tetrahedronGeometry: string;
    torusGeometry: string;
    torusKnotGeometry: string;
    tubeGeometry: string;
    wireframeGeometry: string;
    arrowHelper: string;
    axesHelper: string;
    box3Helper: string;
    boxHelper: string;
    cameraHelper: string;
    directionalLightHelper: string;
    gridHelper: string;
    hemisphereLightHelper: string;
    planeHelper: string;
    pointLightHelper: string;
    polarGridHelper: string;
    skeletonHelper: string;
    spotLightHelper: string;
    ambientLight: string;
    directionalLight: string;
    hemisphereLight: string;
    light: string;
    pointLight: string;
    rectAreaLight: string;
    spotLight: string;
    lightShadow: string;
    pointLightShadow: string;
    directionalLightShadow: string;
    spotLightShadow: string;
    animationLoader: string;
    audioLoader: string;
    bufferGeometryLoader: string;
    compressedTextureLoader: string;
    cubeTextureLoader: string;
    dataTextureLoader: string;
    fileLoader: string;
    imageBitmapLoader: string;
    imageLoader: string;
    loader: string;
    materialLoader: string;
    objectLoader: string;
    textureLoader: string;
    lineBasicMaterial: string;
    lineDashedMaterial: string;
    material: string;
    meshBasicMaterial: string;
    meshDepthMaterial: string;
    meshDistanceMaterial: string;
    meshLambertMaterial: string;
    meshMatcapMaterial: string;
    meshNormalMaterial: string;
    meshPhongMaterial: string;
    meshPhysicalMaterial: string;
    meshStandardMaterial: string;
    meshToonMaterial: string;
    pointsMaterial: string;
    rawShaderMaterial: string;
    shaderMaterial: string;
    shadowMaterial: string;
    spriteMaterial: string;
    box2: string;
    box3: string;
    color: string;
    cylindrical: string;
    euler: string;
    frustum: string;
    interpolant: string;
    line3: string;
    mathUtils: string;
    matrix3: string;
    matrix4: string;
    plane: string;
    quaternion: string;
    ray: string;
    sphere: string;
    spherical: string;
    sphericalHarmonics3: string;
    triangle: string;
    vector2: string;
    vector3: string;
    vector4: string;
    cubicInterpolant: string;
    discreteInterpolant: string;
    linearInterpolant: string;
    quaternionLinearInterpolant: string;
    batchedMesh: string;
    bone: string;
    group: string;
    instancedMesh: string;
    line: string;
    lineLoop: string;
    lineSegments: string;
    lod: string;
    mesh: string;
    points: string;
    skeleton: string;
    skinnedMesh: string;
    sprite: string;
    webGLRenderer: string;
    webGLRenderTarget: string;
    webGL3DRenderTarget: string;
    webGLArrayRenderTarget: string;
    webGLCubeRenderTarget: string;
    webXRManager: string;
    fog: string;
    fogExp2: string;
    scene: string;
    canvasTexture: string;
    compressedArrayTexture: string;
    compressedTexture: string;
    cubeTexture: string;
    data3DTexture: string;
    dataArrayTexture: string;
    dataTexture: string;
    depthTexture: string;
    framebufferTexture: string;
    source: string;
    texture: string;
    videoTexture: string;
    cCDIKSolver: string;
    mMDAnimationHelper: string;
    mMDPhysics: string;
    arcballControls: string;
    dragControls: string;
    firstPersonControls: string;
    flyControls: string;
    mapControls: string;
    orbitControls: string;
    pointerLockControls: string;
    trackballControls: string;
    transformControls: string;
    convexGeometry: string;
    decalGeometry: string;
    parametricGeometry: string;
    textGeometry: string;
    sDFGeometryGenerator: string;
    lightProbeHelper: string;
    positionalAudioHelper: string;
    rectAreaLightHelper: string;
    vertexNormalsHelper: string;
    vertexTangentsHelper: string;
    rhino3dmLoader: string;
    dracoLoader: string;
    fontLoader: string;
    gltfLoader: string;
    ktx2Loader: string;
    lDrawLoader: string;
    lut3dlLoader: string;
    lutCubeLoader: string;
    mmdLoader: string;
    mtlLoader: string;
    objLoader: string;
    pcdLoader: string;
    pdbLoader: string;
    svgLoader: string;
    tgaLoader: string;
    lensflare: string;
    effectComposer: string;
    exporters: string;
    dRACOExporter: string;
    eXRExporter: string;
    gLTFExporter: string;
    oBJExporter: string;
    pLYExporter: string;
    sTLExporter: string;
    lut: string;
    meshSurfaceSampler: string;
    obb: string;
    timer: string;
    Face: string;
    HalfEdge: string;
    ConvexHull: string;
    VertexNode: string;
    VertexList: string;
    css2DRenderer: string;
    css3DRenderer: string;
    svgRenderer: string;
    xrEstimatedLight: string;
};
//# sourceMappingURL=components.d.ts.map