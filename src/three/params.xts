//@ts-nocheck

//** Constructor Parameters */
export const params = {
    // Animation
    animationAction: ['mixer', 'clip', 'localRoot'
    blendMode: AnimationBlendMode
    loop: AnimationActionLoopStyles
    time: number
    timeScale: number
    weight: number
    repetitions: number
    paused: boolean
    enabled: boolean
    clampWhenFinished: boolean
    zeroSlopeAtStart: boolean
    zeroSlopeAtEnd: boolean;
    ],
animationClip: ['name', 'duration', 'tracks',
    blendMode: AnimationBlendMode;
    uuid: string
    results: any[];
    ],
    animationMixer: ['root',
        time: number;
        timeScale: number;
    ],
    animationObjectGroup: ['...args',
        uuid: string
        stats:
    ],
    // animationUtils: [],
    keyframeTrack: ['name', 'times', 'values', 'interpolation',
          ValueTypeName: string
        TimeBufferType: Float32Array
        ValueBufferType: Float32Array;
        DefaultInterpolation: InterpolationModes;
    ],
    propertyBinding: ['rootNode', 'path', 'parsedPath',],
    propertyMixer: ['binding', 'typeName', 'valueSize',
        valueSize: number
        buffer: any
        cumulativeWeight: number
        cumulativeWeightAdditive: number
        useCount: number
        referenceCount: number;
    ],
    // Animation / Tracks
    booleanKeyframeTrack: ['name', 'times', 'values'
    ValueTypeName: string;
    ],
    colorKeyframeTrack: ['name', 'times', 'values',
        ValueTypeName: string;
    ],
    numberKeyframeTrack: ['name', 'times', 'values',
        ValueTypeName: string
    ],
    quaternionKeyframeTrack: ['name', 'times', 'values',
        ValueTypeName: string
    ],
    stringKeyframeTrack: ['name', 'times', 'values',
        ValueTypeName: string
    ],
    vectorKeyframeTrack: ['name', 'times', 'values',
        ValueTypeName: string
    ],
    // Audio
    audio: ['listener',
],
    audioAnalyser: ['audio', 'fftSize',
],
    // audioContext: [],
    audioListener: [],
    positionalAudio: ['listener',
],
    // Cameras
    arrayCamera: ['array',
],
    camera: [],
    cubeCamera: ['near', 'far', 'renderTarget',
],
    orthographicCamera: ['left', 'right', 'top', 'bottom', 'near', 'far',
],
    perspectiveCamera: ['fov', 'aspect', 'near', 'far',
],
    stereoCamera: [],
    // Constants
    // Core
    bufferAttribute: ['array', 'itemSize', 'normalized',
],
    bufferGeometry: [],
    clock: ['autoStart',
],
    eventDispatcher: [],
    glBufferAttribute: ['buffer', 'type', 'itemSize', 'elementSize', 'count',
],
    instancedBufferAttribute: ['array', 'itemSize', 'normalized', 'meshPerAttribute',
],
    instancedBufferGeometry: [],
    instancedInterleavedBuffer: ['array', 'itemSize', 'meshPerAttribute',
],
    interleavedBuffer: ['array', 'stride',
],
    interleavedBufferAttribute: ['interleavedBuffer', 'itemSize', 'offset', 'normalized',
],
    layers: [],
    object3D: [],
    raycaster: ['origin', 'direction', 'near', 'far',
],
    uniform: ['value',
],
    // Core / BufferAttributes
    // BufferAttribute Types

    // Extras
    curve: [] as any,
    curvePath: [] as any,
    // interpolations: [], functions
    path: ['points',
],
    shape: ['points',
],
    shapePath: [] as any,

    // Extras / Curves
    arcCurve: ['aX', 'aY', 'xRadius', 'yRadius', 'aStartAngle', 'aEndAngle', 'aClockwise', 'aRotation',
],
    catmullRomCurve3: ['points', 'closed', 'curveType', 'tension',
],
    cubicBezierCurve: ['v0', 'v1', 'v2', 'v3',
],
    cubicBezierCurve3: ['v0', 'v1', 'v2', 'v3',
],
    ellipseCurve: ['aX', 'aY', 'xRadius', 'yRadius', 'aStartAngle', 'aEndAngle', 'aClockwise', 'aRotation',
],
    lineCurve: ['v1', 'v2',
],
    lineCurve3: ['v1', 'v2',
],
    quadraticBezierCurve: ['v0', 'v1', 'v2',
],
    quadraticBezierCurve3: ['v0', 'v1', 'v2',
],
    splineCurve: ['points',
],

    // Geometries
    boxGeometry: ['width', 'height', 'depth', 'widthSegments', 'heightSegments', 'depthSegments',
],
    capsuleGeometry: ['radius', 'length', 'capSegments', 'radialSegments',
],
    circleGeometry: ['radius', 'segments', 'thetaStart', 'thetaLength',
],
    coneGeometry: ['radius', 'height', 'radialSegments', 'heightSegments', 'openEnded', 'thetaStart', 'thetaLength',
],
    cylinderGeometry: ['radiusTop', 'radiusBottom', 'height', 'radialSegments', 'heightSegments', 'openEnded', 'thetaStart', 'thetaLength',
],
    dodecahedronGeometry: ['radius', 'detail',
],
    edgesGeometry: ['geometry', 'thresholdAngle',
],
    extrudeGeometry: ['shapes', 'options',
],
    icosahedronGeometry: ['radius', 'detail',
],
    latheGeometry: ['points', 'segments', 'phiStart', 'phiLength',
],
    octahedronGeometry: ['radius', 'detail',
],
    planeGeometry: ['width', 'height', 'widthSegments', 'heightSegments',
],
    polyhedronGeometry: ['vertices', 'indices', 'radius', 'detail',
],
    ringGeometry: ['innerRadius', 'outerRadius', 'thetaSegments', 'phiSegments', 'thetaStart', 'thetaLength',
],
    shapeGeometry: ['shapes', 'curveSegments',
],
    sphereGeometry: ['radius', 'widthSegments', 'heightSegments', 'phiStart', 'phiLength', 'thetaStart', 'thetaLength',
],
    tetrahedronGeometry: ['radius', 'detail',
],
    torusGeometry: ['radius', 'tube', 'radialSegments', 'tubularSegments', 'arc',
],
    torusKnotGeometry: ['radius', 'tube', 'tubularSegments', 'radialSegments', 'p', 'q',
],
    tubeGeometry: ['path', 'tubularSegments', 'radius', 'radialSegments', 'closed',
],
    wireframeGeometry: ['geometry',
],

    // Helpers
    arrowHelper: ['dir', 'origin', 'length', 'hex', 'headLength', 'headWidth',
],
    axesHelper: ['size',
],
    boxHelper: ['object', 'color',
],
    box3Helper: ['box', 'color',
],
    cameraHelper: ['camera',
],
    directionalLightHelper: ['light', 'size', 'color',
],
    gridHelper: ['size', 'divisions', 'colorCenterLine', 'colorGrid',
],
    polarGridHelper: ['radius', 'sectors', 'rings', 'divisions', 'color1', 'color2',
],
    hemisphereLightHelper: ['light', 'sphereSize', 'color',
],
    planeHelper: ['plane', 'size', 'hex',
],
    pointLightHelper: ['light', 'sphereSize', 'color',
],
    skeletonHelper: ['object',
],
    spotLightHelper: ['light', 'color',
],
    // Lights
    ambientLight: ['color', 'intensity',
],
    directionalLight: ['color', 'intensity',
],
    hemisphereLight: ['skyColor', 'groundColor', 'intensity',
],
    light: ['color', 'intensity',
],
    lightProbe: ['sh', 'intensity',
],
    pointLight: ['color', 'intensity', 'distance', 'decay',
],
    rectAreaLight: ['color', 'intensity', 'width', 'height',
],
    spotLight: ['color', 'intensity', 'distance', 'angle', 'penumbra', 'decay',
],

    // Lights / Shadows
    lightShadow: ['camera',
],
    pointLightShadow: [],
    directionalLightShadow: [],
    spotLightShadow: [],
    // Loaders
    animationLoader: ['manager',
],
    audioLoader: ['manager',
],
    bufferGeometryLoader: ['manager',
],
    // cache: ['manager',
],
    compressedTextureLoader: ['manager',
],
    cubeTextureLoader: ['manager',
],
    dataTextureLoader: ['manager',
],
    fileLoader: ['manager',
],
    imageBitmapLoader: ['manager',
],
    imageLoader: ['manager',
],
    loader: ['manager',
],
    // loaderUtils: ['manager',
],
    materialLoader: ['manager',
],
    objectLoader: ['manager',
],
    textureLoader: ['manager',
],

    // Loaders / Managers
    // defaultLoadingManager: [],
    loadingManager: ['onLoad', 'onProgress', 'onError',
],

    // Materials
    lineBasicMaterial: ['parameters',
],
    lineDashedMaterial: ['parameters',
],
    material: [],
    meshBasicMaterial: ['parameters',
],
    meshDepthMaterial: ['parameters',
],
    meshDistanceMaterial: ['parameters',
],
    meshLambertMaterial: ['parameters',
],
    meshMatcapMaterial: ['parameters',
],
    meshNormalMaterial: ['parameters',
],
    meshPhongMaterial: ['parameters',
],
    meshPhysicalMaterial: ['parameters',
],
    meshStandardMaterial: ['parameters',
],
    meshToonMaterial: ['parameters',
],
    pointsMaterial: ['parameters',
],
    rawShaderMaterial: ['parameters',
],
    shaderMaterial: ['parameters',
],
    shadowMaterial: ['parameters',
],
    spriteMaterial: ['parameters',
],

    // Math
    box2: ['min', 'max',
],
    box3: ['min', 'max',
],
    color: ['r', 'g', 'b',
],
    cylindrical: ['radius', 'theta', 'y',
],
    euler: ['x', 'y', 'z', 'order',
],
    frustum: ['p0', 'p1', 'p2', 'p3', 'p4', 'p5',
],
    interpolant: ['parameterPositions', 'sampleValues', 'sampleSize', 'resultBuffer',
],
    line3: ['start', 'end',
],
    // mathUtils: [],
    matrix3: ['n11', 'n12', 'n13', 'n21', 'n22', 'n23', 'n31', 'n32', 'n33',
],
    matrix4: ['n11', 'n12', 'n13', 'n14', 'n21', 'n22', 'n23', 'n24', 'n31', 'n32', 'n33', 'n34', 'n41', 'n42', 'n43', 'n44',
],
    plane: ['normal', 'constant',
],
    quaternion: ['x', 'y', 'z', 'w',
],
    ray: ['origin', 'direction',
],
    sphere: ['center', 'radius',
],
    spherical: ['radius', 'phi', 'theta',
],
    sphericalHarmonics3: [],
    triangle: ['a', 'b', 'c',
],
    vector2: ['x', 'y',
],
    vector3: ['x', 'y', 'z',
],
    vector4: ['x', 'y', 'z', 'w',
],
    // Math / Interpolants
    cubicInterpolant: ['parameterPositions', 'sampleValues', 'sampleSize', 'resultBuffer',
],
    discreteInterpolant: ['parameterPositions', 'sampleValues', 'sampleSize', 'resultBuffer',
],
    linearInterpolant: ['parameterPositions', 'sampleValues', 'sampleSize', 'resultBuffer',
],
    quaternionLinearInterpolant: ['parameterPositions', 'sampleValues', 'sampleSize', 'resultBuffer',
],

    // Objects
    batchedMesh: ['maxGeometryCount', 'maxVertexCount', 'maxIndexCount', 'material',
],
    bone: [],
    group: [],
    instancedMesh: ['geometry', 'material', 'count',
],
    line: ['geometry', 'material',
],
    lineLoop: ['geometry', 'material',
],
    lineSegments: ['geometry', 'material',
],
    lod: [],
    mesh: ['geometry', 'material',
],
    points: ['geometry', 'material',
],
    skeleton: ['bones', 'boneInverses',
],
    skinnedMesh: ['geometry', 'material',
],
    sprite: ['material',
],

    // Renderers
    webGLRenderer: ['parameters',
],
    webGLRenderTarget: ['width', 'height', 'options',
],
    webGL3DRenderTarget: ['width', 'height', 'depth', 'options',
],
    webGLArrayRenderTarget: ['width', 'height', 'depth', 'options',
],
    webGLCubeRenderTarget: ['size', 'options',
],

    // Renderers / Shaders
    shaderChunk: [],
    shaderLib: [],
    uniformsLib: [],
    uniformsUtils: [],

    // Renderers / WebXR
    webXRManager: [],

    // Scenes
    fog: ['color', 'near', 'far',
],
    fogExp2: ['color', 'density',
],
    scene: [],

    // Textures
    canvasTexture: ['canvas', 'mapping', 'wrapS', 'wrapT', 'magFilter', 'minFilter', 'format', 'type', 'anisotropy',
],
    compressedTexture: ['mipmaps', 'width', 'height', 'format', 'type', 'mapping', 'wrapS', 'wrapT', 'magFilter', 'minFilter', 'anisotropy', 'colorSpace',
],
    compressedArrayTexture: ['mipmaps', 'width', 'height', 'format', 'type',
],
    cubeTexture: ['images', 'mapping', 'wrapS', 'wrapT', 'magFilter', 'minFilter', 'format', 'type', 'anisotropy', 'colorSpace',
],
    data3DTexture: ['data', 'width', 'height', 'depth',
],
    dataArrayTexture: ['data', 'width', 'height', 'depth',
],
    dataTexture: ['data', 'width', 'height', 'format', 'type', 'mapping', 'wrapS', 'wrapT', 'magFilter', 'minFilter', 'anisotropy', 'colorSpace',
],
    depthTexture: ['width', 'height', 'type', 'mapping', 'wrapS', 'wrapT', 'magFilter', 'minFilter', 'anisotropy', 'format',
],
    framebufferTexture: ['width', 'height',
],
    source: ['data',
],
    texture: ['image', 'mapping', 'wrapS', 'wrapT', 'magFilter', 'minFilter', 'format', 'type', 'anisotropy', 'colorSpace',
],
    videoTexture: ['video', 'mapping', 'wrapS', 'wrapT', 'magFilter', 'minFilter', 'format', 'type', 'anisotropy',
],
    // Addons
    // Animations
    ccdIKSolver: ['mesh', 'iks',
],
    mmdAnimationHelper: ['params',
],
    mmdPhysics: ['mesh', 'rigidBodyParams', 'constraintParams', 'params',
],

    // Controls
    arcballControls: ['camera', 'domElement', 'scene',
],
    dragControls: ['objects', 'camera', 'domElement',
],
    firstPersonControls: ['object', 'domElement',
],
    flyControls: ['object', 'domElement',
],
    mapControls: ['object', 'domElement',
],
    orbitControls: ['object', 'domElement',
],
    pointerLockControls: ['object', 'domElement',
],
    trackballControls: ['object', 'domElement',
],
    transformControls: ['object', 'domElement',
],
    // Geometries
    convexGeometry: ['points',
],
    decalGeometry: ['mesh', 'position', 'orientation', 'size',
],
    parametricGeometry: ['func', 'slices', 'stacks',
],
    sdfGeometryGenerator: ['renderer',
],
    // Helpers
    lightProbeHelper: ['lightProbe', 'size',
],
    positionalAudioHelper: ['audio', 'range',
],
    rectAreaLightHelper: ['light', 'color',
],
    vertexNormalsHelper: ['object', 'size', 'color',
],
    vertexTangentsHelper: ['object', 'size', 'color',
],
    // Lights
    // lightProbeGenerator: [],
    // Loaders
    rhino3dmLoader: ['manager',
],
    dracoLoader: ['manager',
],
    fontLoader: ['manager',
],
    gltfLoader: ['manager',
],
    ktx2Loader: ['manager',
],
    lDrawLoader: ['manager',
],
    lut3dlLoader: ['manager',
],
    lutCubeLoader: ['manager',
],
    mmdLoader: ['manager',
],
    mtlLoader: ['manager',
],
    objLoader: ['manager',
],
    pcdLoader: ['manager',
],
    pdbLoader: ['manager',
],
    svgLoader: ['manager',
],
    tgaLoader: ['manager',
],
    // Objects
    lensflare: ['texture', 'size', 'distance', 'color',
],
    // Post - Processing
    effectComposer: ['renderer', 'renderTarget',
],

    // Exporters
    dracoExporter: [],
    exrExporter: [],
    gltFExporter: [],
    objExporter: [],
    plyExporter: [],
    stlExporter: [],

    // Math
    lut: ['colormap', 'count',
],
    meshSurfaceSampler: ['mesh',
],
    obb: ['center', 'halfSize', 'rotation',
],

    // Misc
    timer: [],

    // ConvexHull
    face: [],
    halfEdge: ['vertex', 'face',
],
    convexHull: [],
    vertexNode: ['point',
],
    vertexList: [],

    //Renderers
    css2DRenderer: ['parameters',
],
    css3DRenderer: ['parameters',
],
    svgRenderer: [],

    //Utils
    // BufferGeometryUtils
    // CameraUtils
    // SceneUtils
    // SkeletonUtils

    // WebXR
    xrEstimatedLight: ['renderer', 'environmentEstimation',
],
}

export const paramTypes = {
    textGeometry: ['str', 'parameters',
],
    gltf: ['path',
],

    //node_modules\.pnpm\@types+three@0.164.0\node_modules\@types\three\src\animation
    animationAction: ['mixer', 'clip', 'localRoot', 'blendMode',
],
    animationClip: ['name', 'duration', 'tracks', 'blendMode',
],
    animationMixer: ['root',
],
    animationObjectGroup: ['...args',
],
    // AnimationUtilsProps
    keyframeTrack: ['name', 'times', 'values', 'interpolation',
],
    propertyBinding: ['targetGroup', 'path', 'parsedPath',
],
    propertyMixer: ['binding', 'typeName', 'valueSize',
],

    //node_modules\.pnpm\@types+three@0.164.0\node_modules\@types\three\src\animation\track
    vectorKeyframeTrack: ['name', 'times', 'values', 'interpolation',
],
    booleanKeyframeTrack: ['name', 'times', 'values',
],
    colorKeyframeTrack: ['name', 'times', 'values', 'interpolation',
],
    numberKeyframeTrack: ['name', 'times', 'values', 'interpolation',
],
    quaternionKeyframeTrack: ['name', 'times', 'values', 'interpolation',
],
    stringKeyframeTrack: ['name', 'times', 'values', 'interpolation',
],

    //node_modules\.pnpm\@types+three@0.164.0\node_modules\@types\three\src\audio
    // audio:AudioProps,
    //@ts-ignore
    audio: ['listener',
],
    audioAnalyser: ['audio', 'fftSize',
],
    // audioContext:AudioContextProps,
    // `audio` works but conflicts with @types/react. Try using PositionalAudio from @react-three/drei instead
    // audio
    audioListener: [],
    positionalAudio: ['listener',
],

    //node_modules\.pnpm\@types+three@0.164.0\node_modules\@types\three\src\cameras
    camera: [],
    perspectiveCamera: ['fov', 'aspect', 'near', 'far',
],
    orthographicCamera: ['left', 'right', 'top', 'bottom', 'near', 'far',
],
    cubeCamera: ['near', 'far', 'renderTarget',
],
    arrayCamera: ['cameras',
],
    stereoCamera: [],

    //node_modules\.pnpm\@types+three@0.164.0\node_modules\@types\three\src\core
    bufferAttribute: ['array', 'itemSize', 'normalized',
],
    bufferGeometry: [],
    clock: ['autoStart',
],
    eventDispatcher: [],
    glBufferAttribute: ['buffer', 'type', 'itemSize', 'elementSize', 'count',
],
    instancedBufferAttribute: ['array', 'itemSize', 'normalized', 'meshPerAttribute',
],
    instancedBufferGeometry: [],
    instancedInterleavedBuffer: ['array', 'stride', 'meshPerAttribute',
],
    interleavedBuffer: ['array', 'stride',
],
    interleavedBufferAttribute: ['interleavedBuffer', 'itemSize', 'offset', 'normalized',
],
    // layers:LayersProps,
    object3D: [],
    raycaster: ['origin', 'direction', 'near', 'far',
],
    renderTarget: ['width', 'height', 'options',
],
    uniform: ['value',
],
    uniformsGroup: [],

    //node_modules\.pnpm\@types+three@0.164.0\node_modules\@types\three\src\extras\core
    // curve:curveProps,
    curvePath: [],
    // interpolations:InterpolationsProps,
    //@ts-ignore
    path: ['points',
],
    shape: ['points',
],
    shapePath: [],

    //node_modules\.pnpm\@types+three@0.164.0\node_modules\@types\three\src\extras\curves
    arcCurve: ['aX', 'aY', 'aRadius', 'aStartAngle', 'aEndAngle', 'aClockwise',
],
    catmullRomCurve3: ['points', 'closed', 'curveType', 'tension',
],
    cubicBezierCurve: ['v0', 'v1', 'v2', 'v3',
],
    cubicBezierCurve3: ['v0', 'v1', 'v2', 'v3',
],
    ellipseCurve: ['aX', 'aY', 'xRadius', 'yRadius', 'aStartAngle', 'aEndAngle', 'aClockwise', 'aRotation',
],
    lineCurve: ['v1', 'v2',
],
    lineCurve3: ['v1', 'v2',
],
    quadraticBezierCurve: ['v0', 'v1', 'v2',
],
    quadraticBezierCurve3: ['v0', 'v1', 'v2',
],
    splineCurve: ['points',
],

    // export type InstancedBufferGeometryProps = BufferGeometryNode<THREE.InstancedBufferGeometry, typeof THREE.InstancedBufferGeometry>
    // export type BufferGeometryProps = BufferGeometryNode<THREE.BufferGeometry, typeof THREE.BufferGeometry>
    // export type BoxBufferGeometryProps = BufferGeometryNode<THREE.BoxGeometry, typeof THREE.BoxGeometry>
    // export type CircleBufferGeometryProps = BufferGeometryNode<THREE.CircleGeometry, typeof THREE.CircleGeometry>
    // export type ConeBufferGeometryProps = BufferGeometryNode<THREE.ConeGeometry, typeof THREE.ConeGeometry>
    // export type CylinderBufferGeometryProps = BufferGeometryNode<THREE.CylinderGeometry, typeof THREE.CylinderGeometry>
    // export type DodecahedronBufferGeometryProps = BufferGeometryNode<THREE.DodecahedronGeometry, typeof THREE.DodecahedronGeometry>
    // export type ExtrudeBufferGeometryProps = BufferGeometryNode<THREE.ExtrudeGeometry, typeof THREE.ExtrudeGeometry>
    // export type IcosahedronBufferGeometryProps = BufferGeometryNode<THREE.IcosahedronGeometry, typeof THREE.IcosahedronGeometry>
    // export type LatheBufferGeometryProps = BufferGeometryNode<THREE.LatheGeometry, typeof THREE.LatheGeometry>
    // export type OctahedronBufferGeometryProps = BufferGeometryNode<THREE.OctahedronGeometry, typeof THREE.OctahedronGeometry>
    // export type PlaneBufferGeometryProps = BufferGeometryNode<THREE.PlaneGeometry, typeof THREE.PlaneGeometry>
    // export type PolyhedronBufferGeometryProps = BufferGeometryNode<THREE.PolyhedronGeometry, typeof THREE.PolyhedronGeometry>
    // export type RingBufferGeometryProps = BufferGeometryNode<THREE.RingGeometry, typeof THREE.RingGeometry>
    // export type ShapeBufferGeometryProps = BufferGeometryNode<THREE.ShapeGeometry, typeof THREE.ShapeGeometry>
    // export type SphereBufferGeometryProps = BufferGeometryNode<THREE.SphereGeometry, typeof THREE.SphereGeometry>
    // export type TetrahedronBufferGeometryProps = BufferGeometryNode<THREE.TetrahedronGeometry, typeof THREE.TetrahedronGeometry>
    // export type TorusBufferGeometryProps = BufferGeometryNode<THREE.TorusGeometry, typeof THREE.TorusGeometry>
    // export type TorusKnotBufferGeometryProps = BufferGeometryNode<THREE.TorusKnotGeometry, typeof THREE.TorusKnotGeometry>
    // export type TubeBufferGeometryProps = BufferGeometryNode<THREE.TubeGeometry, typeof THREE.TubeGeometry>
    // export type WireframeGeometryProps = BufferGeometryNode<THREE.WireframeGeometry, typeof THREE.WireframeGeometry>
    // export type TetrahedronGeometryProps = BufferGeometryNode<THREE.TetrahedronGeometry, typeof THREE.TetrahedronGeometry>
    // export type OctahedronGeometryProps = BufferGeometryNode<THREE.OctahedronGeometry, typeof THREE.OctahedronGeometry>
    // export type IcosahedronGeometryProps = BufferGeometryNode<THREE.IcosahedronGeometry, typeof THREE.IcosahedronGeometry>
    // export type DodecahedronGeometryProps = BufferGeometryNode<THREE.DodecahedronGeometry, typeof THREE.DodecahedronGeometry>
    // export type PolyhedronGeometryProps = BufferGeometryNode<THREE.PolyhedronGeometry, typeof THREE.PolyhedronGeometry>
    // export type TubeGeometryProps = BufferGeometryNode<THREE.TubeGeometry, typeof THREE.TubeGeometry>
    // export type TorusKnotGeometryProps = BufferGeometryNode<THREE.TorusKnotGeometry, typeof THREE.TorusKnotGeometry>
    // export type TorusGeometryProps = BufferGeometryNode<THREE.TorusGeometry, typeof THREE.TorusGeometry>
    // export type SphereGeometryProps = BufferGeometryNode<THREE.SphereGeometry, typeof THREE.SphereGeometry>
    // export type RingGeometryProps = BufferGeometryNode<THREE.RingGeometry, typeof THREE.RingGeometry>
    // export type PlaneGeometryProps = BufferGeometryNode<THREE.PlaneGeometry, typeof THREE.PlaneGeometry>
    // export type LatheGeometryProps = BufferGeometryNode<THREE.LatheGeometry, typeof THREE.LatheGeometry>
    // export type ShapeGeometryProps = BufferGeometryNode<THREE.ShapeGeometry, typeof THREE.ShapeGeometry>
    // export type ExtrudeGeometryProps = BufferGeometryNode<THREE.ExtrudeGeometry, typeof THREE.ExtrudeGeometry>
    // export type EdgesGeometryProps = BufferGeometryNode<THREE.EdgesGeometry, typeof THREE.EdgesGeometry>
    // export type ConeGeometryProps = BufferGeometryNode<THREE.ConeGeometry, typeof THREE.ConeGeometry>
    // export type CylinderGeometryProps = BufferGeometryNode<THREE.CylinderGeometry, typeof THREE.CylinderGeometry>
    // export type CircleGeometryProps = BufferGeometryNode<THREE.CircleGeometry, typeof THREE.CircleGeometry>
    // export type BoxGeometryProps = BufferGeometryNode<THREE.BoxGeometry, typeof THREE.BoxGeometry>
    // export type TextGeometryProps = BufferGeometryNode<TextGeometry, typeof TextGeometry>
    // export type CapsuleGeometryProps = BufferGeometryNode<THREE.CapsuleGeometry, typeof THREE.CapsuleGeometry>

    // export type GeometriesProps = BufferGeometryNode<THREE.Geometries, typeof THREE.Geometries>
    boxGeometry: ['width', 'height', 'depth', 'widthSegments', 'heightSegments', 'depthSegments',
],
    capsuleGeometry: ['radius', 'length', 'capSegments', 'radialSegments',
],
    circleGeometry: ['radius', 'segments', 'thetaStart', 'thetaLength',
],
    coneGeometry: ['radius', 'height', 'radialSegments', 'heightSegments', 'openEnded', 'thetaStart', 'thetaLength',
],
    cylinderGeometry: ['radiusTop', 'radiusBottom', 'height', 'radialSegments', 'heightSegments', 'openEnded', 'thetaStart', 'thetaLength',
],
    dodecahedronGeometry: ['radius', 'detail',
],
    edgesGeometry: ['geometry', 'thresholdAngle',
],
    extrudeGeometry: ['shapes', 'options',
],
    icosahedronGeometry: ['radius', 'detail',
],
    latheGeometry: ['points', 'segments', 'phiStart', 'phiLength',
],
    octahedronGeometry: ['radius', 'detail',
],
    planeGeometry: ['width', 'height', 'widthSegments', 'heightSegments',
],
    polyhedronGeometry: ['vertices', 'indices', 'radius', 'detail',
],
    ringGeometry: ['innerRadius', 'outerRadius', 'thetaSegments', 'phiSegments', 'thetaStart', 'thetaLength',
],
    shapeGeometry: ['shapes', 'curveSegments',
],
    sphereGeometry: ['radius', 'widthSegments', 'heightSegments', 'phiStart', 'phiLength', 'thetaStart', 'thetaLength',
],
    tetrahedronGeometry: ['radius', 'detail',
],
    torusGeometry: ['radius', 'tube', 'radialSegments', 'tubularSegments', 'arc',
],
    torusKnotGeometry: ['radius', 'tube', 'tubularSegments', 'radialSegments', 'p', 'q',
],
    tubeGeometry: ['path', 'tubularSegments', 'radius', 'radialSegments', 'closed',
],
    wireframeGeometry: ['path', 'tubularSegments', 'radius', 'radialSegments', 'closed',
],

    //node_modules\.pnpm\@types+three@0.164.0\node_modules\@types\three\src\helpers
    arrowHelper: ['dir', 'origin', 'length', 'color', 'headLength', 'headWidth',
],
    axesHelper: ['size',
],
    box3Helper: ['box', 'color',
],
    boxHelper: ['object', 'color',
],
    cameraHelper: ['camera',
],
    directionalLightHelper: ['light', 'size', 'color',
],
    gridHelper: ['size', 'divisions', 'color1', 'color2',
],
    hemisphereLightHelper: ['light', 'size', 'color',
],
    planeHelper: ['plane', 'size', 'hex',
],
    pointLightHelper: ['light', 'sphereSize', 'color',
],
    polarGridHelper: ['radius', 'radials', 'circles', 'divisions', 'color1', 'color2',
],
    skeletonHelper: ['object' ],
    spotLightHelper: ['light', 'color',
],

    //node_modules\.pnpm\@types+three@0.164.0\node_modules\@types\three\src\lights
    AmbientLight: ['color', 'intensity',
],
    DirectionalLight: ['color', 'intensity',
],
    DirectionalLightShadow: [],
    HemisphereLight: ['skyColor', 'groundColor', 'intensity',
],
    Light: ['color', 'intensity',
],
    LightProbe: ['sh', 'intensity',
],
    LightShadow: ['camera',
],
    PointLight: ['color', 'intensity', 'distance', 'decay',
],
    PointLightShadow: ['camera',
],
    RectAreaLight: ['color', 'intensity', 'width', 'height',
],
    SpotLight: ['color', 'intensity', 'distance', 'angle', 'penumbra', 'decay',
],
    SpotLightShadow: ['camera',
],

    //node_modules\.pnpm\@types+three@0.164.0\node_modules\@types\three\src\loaders
    //no need

    //node_modules\.pnpm\@types+three@0.164.0\node_modules\@types\three\src\materials
    lineBasicMaterial: ['parameters',
],
    lineDashedMaterial: ['parameters',
],
    material: ['parameters',
],
    // materials:MaterialsProps,
    meshBasicMaterial: ['parameters',
],
    meshDepthMaterial: ['parameters',
],
    meshDistanceMaterial: ['parameters',
],
    meshLambertMaterial: ['parameters',
],
    meshMatcapMaterial: ['parameters',
],
    meshNormalMaterial: ['parameters',
],
    meshPhongMaterial: ['parameters',
],
    meshPhysicalMaterial: ['parameters',
],
    meshStandardMaterial: ['parameters',
],
    meshToonMaterial: ['parameters',
],
    pointsMaterial: ['parameters',
],
    rawShaderMaterial: ['parameters',
],
    shaderMaterial: ['parameters',
],
    shadowMaterial: ['parameters',
],
    spriteMaterial: ['parameters',
],


    //node_modules\.pnpm\@types+three@0.164.0\node_modules\@types\three\src\math
    box2: ['min', 'max',
],
    box3: ['min', 'max',
],
    color: ['color', 'r', 'g', 'b',
],
    colorManagement: [],
    cylindrical: ['radius', 'theta', 'y',
],
    euler: ['x', 'y', 'z', 'order',
],
    frustum: ['p0', 'p1', 'p2', 'p3', 'p4', 'p5',
],
    interpolant: ['parameterPositions', 'sampleValues', 'sampleSize', 'resultBuffer',
],
    line3: ['start', 'end',
],
    // mathUtils:MathUtilsProps,
    matrix3: ['n11', 'n12', 'n13', 'n21', 'n22', 'n23', 'n31', 'n32', 'n33',
],
    matrix4: ['n11', 'n12', 'n13', 'n14', 'n21', 'n22', 'n23', 'n24', 'n31', 'n32', 'n33', 'n34', 'n41', 'n42', 'n43', 'n44',
],
    plane: ['normal', 'constant',
],
    quaternion: ['x', 'y', 'z', 'w',
],
    ray: ['origin', 'direction',
],
    sphere: ['center', 'radius',
],
    spherical: ['radius', 'phi', 'theta',
],
    sphericalHarmonics3: [],
    triangle: ['a', 'b', 'c',
],
    vector2: ['x', 'y',
],
    vector3: ['x', 'y', 'z',
],
    vector4: ['x', 'y', 'z', 'w',
],

    //node_modules\.pnpm\@types+three@0.164.0\node_modules\@types\three\src\math\interpolants
    cubicInterpolant: ['parameterPositions', 'samplesValues', 'sampleSize', 'resultBuffer',
],
    discreteInterpolant: ['parameterPositions', 'samplesValues', 'sampleSize', 'resultBuffer',
],
    linearInterpolant: ['parameterPositions', 'samplesValues', 'sampleSize', 'resultBuffer',
],
    quaternionLinearInterpolant: ['parameterPositions', 'samplesValues', 'sampleSize', 'resultBuffer',
],


    //node_modules\.pnpm\@types+three@0.164.0\node_modules\@types\three\src\objects
    batchedMesh: ['maxGeometryCount', 'maxVertexCount', 'maxIndexCount', 'material',
],
    bone: [],
    group: [],
    instancedMesh: ['geometry', 'material', 'count',
],
    line: ['geometry', 'material',
],
    lineLoop: ['geometry', 'material',
],
    lineSegments: ['geometry', 'material',
],
    lod: [],
    mesh: ['geometry', 'material',
],
    points: ['geometry', 'material',
],
    skeleton: ['bones', 'boneInverses',
],
    skinnedMesh: ['geometry', 'material', 'useVertexTexture',
],
    sprite: ['material',
],

    //node_modules\.pnpm\@types+three@0.164.0\node_modules\@types\three\src\renderers
    webGLCubeRenderTarget: ['size', 'options',
],
    webGLRenderer: ['parameters',
],
    webGLRenderTarget: ['width', 'height', 'options',
],
    webGL3DRenderTarget: ['width', 'height', 'depth', 'options',
],
    webGLArrayRenderTarget: ['width', 'height', 'depth', 'options',
],

    //node_modules\.pnpm\@types+three@0.164.0\node_modules\@types\three\src\renderers\shaders
    //node_modules\.pnpm\@types+three@0.164.0\node_modules\@types\three\src\renderers\webgl
    webGLProgram: ['renderer', 'cacheKey', 'parameters',
],
    webGLPrograms: ['renderer', 'cubemaps', 'extensions', 'capabilities', 'bindingStates', 'clipping',
],
    webGLProperties: [],
    webGLRenderLists: ['properties',
],
    // webGLShader:WebGLShaderProps,
    webGLShadowMap: ['_renderer', '_objects', '_capabilities',
],
    webGLState: ['gl',
],
    webGLTextures: ['gl', 'extensions', 'state', 'properties', 'capabilities', 'utils', 'info',
],
    webGLUniforms: ['gl', 'program',
],
    // webGLUniformsGroups:WebGLUniformsGroupsProps,
    webGLUtils: ['gl', 'extensions',
],
    // webGLAttributes:WebGLAttributesProps,
    // webGLBindingStates:WebGLBindingStatesProps,
    webGLBufferRenderer: ['gl', 'extensions', 'info',
],
    webGLCapabilities: ['gl', 'extensions', 'parameters',
],
    webGLClipping: ['properties',
],
    // webGLCubeMaps:WebGLCubeMapsProps,
    webGLCubeUVMaps: ['renderer',
],
    webGLExtensions: ['gl',
],
    webGLGeometries: ['gl', 'attributes', 'info',
],
    webGLIndexedBufferRenderer: ['gl', 'extensions', 'info',
],
    webGLInfo: ['gl',
],
    webGLLights: ['extensions',
],
    webGLObjects: ['gl', 'geometries', 'attributes', 'info',
],

    //node_modules\.pnpm\@types+three@0.164.0\node_modules\@types\three\src\renderers\webxr
    webXRController: [],
    // webXRDepthSensing:WebXRDepthSensingProps,
    webXRManager: ['renderer', 'gl',
],

    //node_modules\.pnpm\@types+three@0.164.0\node_modules\@types\three\src\scenes
    fog: ['color', 'near', 'far',
],
    fogExp2: ['color', 'density',
],
    scene: [],

    //node_modules\.pnpm\@types+three@0.164.0\node_modules\@types\three\src\textures
    dataTexture3D: ['data', 'width', 'height', 'depth',
],
    canvasTexture: ['canvas', 'mapping', 'wrapS', 'wrapT', 'magFilter', 'minFilter', 'format', 'type', 'anisotropy',
],
    compressedArrayTexture: ['mipmaps', 'width', 'height', 'depth', 'format', 'type',
],
    compressedCubeTexture: ['images', 'format', 'type',
],

    compressedTexture: ['mipmaps', 'width', 'height', 'format', 'type', 'mapping', 'wrapS', 'wrapT', 'magFilter', 'minFilter', 'anisotropy', 'colorSpace',
],
    cubeTexture: ['images', 'mapping', 'wrapS', 'wrapT', 'magFilter', 'minFilter', 'format', 'type', 'anisotropy', 'colorSpace',
],
    data3DTexture: ['data', 'width', 'height', 'depth',
],
    dataArrayTexture: ['data', 'width', 'height', 'depth',
],
    dataTexture: ['data', 'width', 'height', 'format', 'type', 'mapping', 'wrapS', 'wrapT', 'magFilter', 'minFilter', 'anisotropy', 'colorSpace',
],
    depthTexture: ['width', 'height', 'type', 'mapping', 'wrapS', 'wrapT', 'magFilter', 'minFilter', 'anisotropy', 'format',
],
    framebufferTexture: ['width', 'height',
],
    source: ['data',
],
    texture: ['image', 'mapping', 'wrapS', 'wrapT', 'magFilter', 'minFilter', 'format', 'type', 'anisotropy', 'colorSpace',
],
    videoTexture: ['video', 'mapping', 'wrapS', 'wrapT', 'magFilter', 'minFilter', 'format', 'type', 'anisotropy',
],

    //in example
    //node_modules\@types\three\examples\jsm\animation
    ccdikSolver: ['mesh', 'iks',
],
    mmdAnimationHelper: ['params',
],
    mmdPhysics: ['mesh', 'rigidBodyParams', 'constraintParams', 'params',
],
    // animationClipCreator,

    //node_modules\@types\three\examples\jsm\cameras
    cinematicCamera: ['fov', 'aspect', 'near', 'far',
],

    //node_modules\@types\three\examples\jsm\capabilities
    webGL: [],
    webGPU: [],

    //node_modules\@types\three\examples\jsm\controls
    arcballControls: ['camera', 'domElement', 'scene',
],
    dragControls: ['objects', 'camera', 'domElement',
],
    firstPersonControls: ['object', 'domElement',
],
    flyControls: ['object', 'domElement',
],
    mapControls: ['object', 'domElement',
],
    orbitControls: ['object', 'domElement', 'enableDamping',
],
    pointerLockControls: ['camera', 'domElement',
],
    trackballControls: ['object', 'domElement',
],
    transformControls: ['object', 'domElement',
],

    //node_modules\@types\three\examples\jsm\csm
    csm: ['data',
],
    csmFrustum: ['data',
],
    csmHelper: ['csm',
],
    // csmShader,

    //node_modules\@types\three\examples\jsm\curves
    grannyKnot: [],
    heartCurve: ['scale',
],
    vivianiCurve: ['scale',
],
    knotCurve: [],
    helixCurve: [],
    trefoilKnot: ['scale',
],
    torusKnot: ['scale',
],
    cinquefoilKnot: ['scale',
],
    trefoilPolynomialKnot: ['scale',
],
    figureEightPolynomialKnot: ['scale',
],
    decoratedTorusKnot4a: ['scale',
],
    decoratedTorusKnot4b: ['scale',
],
    decoratedTorusKnot5a: ['scale',
],
    decoratedTorusKnot5c: ['scale',
],
    nurbsCurve: ['degree', 'knots', 'controlPoints', 'startKnot', 'endKnot',
],
    nurbsSurface: ['degree1', 'degree2', 'knots1', 'knots2', 'controlPoints',
],
    // nurbsUtils:NURBSUtilsProps,
    nurbsVolume: ['degree1', 'degree2', 'degree3', 'knots1', 'knots2', 'knots3', 'controlPoints',
],

    //node_modules\@types\three\examples\jsm\deprecated
    //Geometry

    //node_modules\@types\three\examples\jsm\effects
    anaglyphEffect: ['renderer', 'width', 'height',
],
    asciiEffect: ['renderer', 'charSet', 'options',
],
    outlineEffect: ['renderer', 'parameters',
],
    parallaxBarrierEffect: ['renderer',
],
    peppersGhostEffect: ['renderer',
],
    stereoEffect: ['renderer',
],

    //node_modules\@types\three\examples\jsm\environments
    debugEnvironment: [],
    roomEnvironment: ['renderer',
],

    //node_modules\@types\three\examples\jsm\exporters
    dracoExporter: [],
    exrExporter: [],
    gltfExporter: [],
    ktx2Exporter: [],
    mmdExporter: [],
    objExporter: [],
    plyExporter: [],
    stlExporter: [],
    usdzExporter: [],

    //node_modules\@types\three\examples\jsm\geometries
    boxLineGeometry: ['width', 'height', 'depth', 'widthSegments', 'heightSegments', 'depthSegments',
],
    convexGeometry: ['points',
],
    decalGeometry: ['mesh', 'position', 'orientation', 'size',
],
    decalVertex: ['position', 'normal',
],

    // parametricGeometries:ParametricGeometriesProps,
    parametricGeometries_TubeGeometry: ['path', 'segments', 'radius', 'segmentsRadius', 'closed',
],
    parametricGeometries_TorusKnotGeometry: ['radius', 'tube', 'segmentsT', 'segmentsR', 'p', 'q',
],
    parametricGeometries_SphereGeometry: ['size', 'u', 'v',
],
    parametricGeometries_PlaneGeometry: ['width', 'depth', 'segmentsWidth', 'segmentsDepth',
],
    parametricGeometry: ['func', 'slices', 'stacks',
],
    roundedBoxGeometry: ['width', 'height', 'depth', 'segments', 'radius',
],
    sDFGeometryGenerator: ['renderer',
],
    teapotGeometry: ['size', 'segments', 'bottom', 'lid', 'body', 'fitLid', 'blinn',
],
    textGeometry: ['text', 'parameters',
],

    //node_modules\@types\three\examples\jsm\helpers
    lightProbeHelper: ['lightProbe', 'size',
],
    octreeHelper: ['octree', 'color',
],
    positionalAudioHelper: ['audio', 'range', 'divisionsInnerAngle', 'divisionsOuterAngle',
],
    rectAreaLightHelper: ['light', 'color',
],
    textureHelper: ['texture', 'width', 'height', 'depth',
],
    vertexNormalsHelper: ['object', 'size', 'hex',
],
    vertexTangentsHelper: ['object', 'size', 'hex',
],
    viewHelper: ['camera', 'domElement',
],

    //node_modules\@types\three\examples\jsm\interactive
    hTMLMesh: ['dom',
],
    interactiveGroup: [],
    selectionBox: ['camera', 'scene', 'deep',
],
    selectionHelper: ['renderer', 'cssClassName',
],

    //node_modules\@types\three\examples\jsm\libs
    //node_modules\@types\three\examples\jsm\lights
    // import {type LightProbeGenerator} from 'three/examples/jsm/lights/LightProbeGenerator'
    // import { type RectAreaLightUniformsLib } from 'three/examples/jsm/lights/RectAreaLightUniformsLib'
    iesSpotLight: ['color', 'intensity', 'distance', 'angle', 'penumbra', 'decay',
],
    // export type LightProbeGeneratorProps = Node<LightProbeGenerator, typeof LightProbeGenerator>
    // export type RectAreaLightUniformsLibProps = Node<RectAreaLightUniformsLib, typeof RectAreaLightUniformsLib>

    //node_modules\@types\three\examples\jsm\lines
    line2: ['geometry', 'material',
],
    lineGeometry: [],
    lineMaterial: ['parameters',
],
    lineSegments2: ['geometry', 'material',
],
    lineSegmentsGeometry: [],
    wireframe: ['geometry', 'material',
],
    wireframeGeometry2: ['geometry',
],

    //node_modules\@types\three\examples\jsm\loaders
    rhino3dmLoader: ['manager',
],
    threeMFLoader: ['manager',
],
    amfLoader: ['manager',
],
    bvhLoader: ['manager',
],
    colladaLoader: ['manager',
],
    ddsLoader: ['manager',
],
    dracoLoader: ['manager',
],
    exrLoader: ['manager',
],
    fbxLoader: ['manager',
],
    fontLoader: ['manager',
],
    gcodeLoader: ['manager',
],
    gltfLoader: ['manager',
],
    hdrCubeTextureLoader: ['manager',
],
    iesLoader: ['manager',
],
    kmzLoader: ['manager',
],
    ktx2Loader: ['manager',
],
    ktxLoader: ['manager',
],
    ldrawLoader: ['manager',
],
    logLuvLoader: ['manager',
],
    lottieLoader: ['manager',
],
    lut3dlLoader: ['manager',
],
    lutCubeLoader: ['manager',
],
    lwoLoader: ['manager',
],
    materialXLoader: ['manager',
],
    md2Loader: ['manager',
],
    mddLoader: ['manager',
],
    mmdLoader: ['manager',
],
    mtlLoader: ['manager',
],
    nrrdLoader: ['manager',
],
    objLoader: ['manager',
],
    pcdLoader: ['manager',
],
    pdbLoader: ['manager',
],
    plyLoader: ['manager',
],
    pvrLoader: ['manager',
],
    rgbeLoader: ['manager',
],
    rgbmLoader: ['manager',
],
    stlLoader: ['manager',
],
    svgLoader: ['manager',
],
    tdsLoader: ['manager',
],
    tgaLoader: ['manager',
],
    tiffLoader: ['manager',
],
    tiltLoader: ['manager',
],
    ttfLoader: ['manager',
],
    usdzLoader: ['manager',
],
    voxLoader: ['manager',
],
    vrmlLoader: ['manager',
],
    vtkLoader: ['manager',
],
    xyzLoader: ['manager',
],

    //node_modules\@types\three\examples\jsm\materials
    meshGouraudMaterial: ['parameters',
],
    meshPostProcessingMaterial: ['parameters',
],

    //node_modules\@types\three\examples\jsm\math
    capsule: ['start', 'end', 'radius',
],
    // colorConverter:ColorConverterProps,
    convexHull: [],
    improvedNoise: [],
    lut: ['colormap', 'numberofcolors',
],
    meshSurfaceSampler: ['mesh',
],
    obb: ['center', 'halfSize', 'rotation',
],
    octree: ['box',
],
    simplexNoise: ['r',
],

    //node_modules\@types\three\examples\jsm\misc
    convexObjectBreaker: ['minSizeForBreak', 'smallDelta',
],
    gpuComputationRenderer: ['sizeX', 'sizeY', 'renderer',
],
    gyroscope: [],
    md2Character: [],
    md2CharacterComplex: [],
    morphAnimMesh: ['geometry', 'material',
],
    morphBlendMesh: ['geometry', 'material',
],
    progressiveLightMap: ['renderer', 'res',
],
    rollerCoasterGeometry: ['curve', 'divisions',
],
    rollerCoasterLiftersGeometry: ['curve', 'divisions',
],
    rollerCoasterShadowGeometry: ['curve', 'divisions',
],
    skyGeometry: [],
    treesGeometry: ['landscape',
],
    timer: [],
    tubePainter: [],
    volume: [],
    volumeSlice: ['volume', 'index', 'axis',
],

    //node_modules\@types\three\examples\jsm\modifiers
    instancedFlow: ['count', 'curveCount', 'geometry', 'material',
],
    flow: ['mesh', 'numberOfCurves',
],
    edgeSplitModifier: [],
    simplifyModifier: [],
    tessellateModifier: ['maxEdgeLength', 'maxIterations',
],

    //node_modules\@types\three\examples\jsm\nodes
    // Nodes

    //node_modules\@types\three\examples\jsm\nodes\accessors

    //AccessorsUtilsProps
    batchNode: ['batchMesh',
],
    bitangentNode: ['scope',
],
    bufferNode: ['value', 'bufferType', 'bufferCount',
],
    cameraNode: ['scope',
],
    clippingNode: ['scope',
],
    cubeTextureNode: ['value', 'uvNode', 'levelNode',
],
    instanceNode: ['instanceMesh',
],
    materialNode: ['scope',
],
    materialReferenceNode: ['property', 'inputType', 'material',
],
    modelNode: ['scope',
],
    modelViewProjectionNode: ['positionNode',
],
    normalNode: ['scope',
],
    object3DNode: ['scope', 'object3d',
],
    pointUVNode: [],
    positionNode: ['scope',
],
    referenceNode: ['property', 'uniformType', 'object', 'count',
],
    reflectVectorNode: [],
    rendererReferenceNode: ['property', 'inputType', 'renderer',
],
    skinningNode: ['skinnedMesh', 'useReference',
],
    storageBufferNode: ['value', 'bufferType', 'bufferCount',
],
    tangentNode: ['scope',
],
    textureBicubicNode: ['textureNode', 'blurNode',
],
    textureNode: ['value', 'uvNode', 'levelNode',
],
    uniformsNode: ['value', 'elementType',
],
    userDataNode: ['property', 'inputType', 'userData',
],
    uvNode: ['index',
],
    vertexColorNode: ['index',
],

    //node_modules\@types\three\examples\jsm\nodes\code
    codeNode: ['code', 'includes', 'language',
],
    expressionNode: ['snipped', 'nodeType',
],
    functionCallNode: ['functionNode', 'parameters',
],
    functionNode: ['code', 'includes', 'language',
],

    //node_modules\@types\three\examples\jsm\nodes\core
    assignNode: ['targetNode', 'sourceNode',
],
    attributeNode: ['attributeName', 'nodeType',
],
    bypassNode: ['returnNode', 'callNode',
],
    cacheNode: ['node', 'cache',
],
    // constants:constantsProps,
    constNode: ['value', 'nodeType',
],
    contextNode: ['node', 'context',
],
    indexNode: ['scope',
],
    inputNode: ['value', 'nodeType',
],
    lightingModel: [],
    // node:NodeProps,
    nodeAttribute: ['name', 'type',
],
    nodeBuilder: [],
    nodeCache: [],
    nodeCode: ['name', 'type', 'code',
],
    nodeFrame: [],
    nodeFunction: ['type', 'inputs', 'name', 'presicion',
],
    nodeFunctionInput: ['type', 'name', 'count', 'qualifier', 'isConst',
],
    nodeKeywords: [],
    nodeParser: [],
    nodeUniform: ['name', 'type', 'node', 'needsUpdate',
],
    // nodeUtils:NodeUtilsProps,
    nodeVar: ['name', 'type',
],
    nodeVarying: ['name', 'type',
],
    outputStructNode: ['...members',
],
    propertyNode: ['nodeType', 'name', 'varying',
],
    stackNode: [],
    tempNode: ['type',
],
    uniformNode: ['value', 'nodeType',
],
    varNode: ['node', 'name',
],
    varyingNode: ['node', 'name',
],

    //node_modules\@types\three\examples\jsm\nodes\display
    afterImageNode: ['textureNode', 'damp',
],
    anamorphicNode: ['textureNode', 'thresholdNode', 'scaleNode', 'samples',
],
    blendModeNode: ['blendMode', 'baseNode', 'blendNode',
],
    colorAdjustmentNode: ['method', 'colorNode', 'adjustmentNode',
],
    colorSpaceNode: ['method', 'node',
],
    frontFacingNode: [],
    gaussianBlurNode: ['textureNode', 'sigma',
],
    normalMapNode: ['node', 'scaleNode',
],
    passNode: ['scope', 'scene', 'camera',
],
    posterizeNode: ['sourceNode', 'stepsNode',
],
    toneMappingNode: ['toneMapping', 'exposureNode', 'colorNode',
],
    viewportDepthNode: ['scope', 'valueNode',
],
    viewportDepthTextureNode: ['uvNode', 'levelNode',
],
    viewportNode: ['scope',
],
    viewportSharedTextureNode: ['uvNode', 'levelNode',
],
    viewportTextureNode: ['uvNode', 'levelNode', 'framebufferTexture',
],

    //node_modules\@types\three\examples\jsm\nodes\fog
    fogExp2Node: ['colorNode', 'densityNode',
],
    fogNode: ['colorNode', 'factorNode',
],
    fogRangeNode: ['colorNode', 'nearNode', 'farNode',
],

    //node_modules\@types\three\examples\jsm\nodes\functions
    phongLightingModel: ['specular',
],
    physicalLightingModel: ['clearcoat', 'sheen', 'iridescence', 'anisotropy', 'transmission',
],
    shadowMaskModel: [],

    //node_modules\@types\three\examples\jsm\nodes\functions\BSDF
    //node_modules\@types\three\examples\jsm\nodes\functions\material
    //node_modules\@types\three\examples\jsm\nodes\geometry
    rangeNode: ['min', 'max',
],

    //node_modules\@types\three\examples\jsm\nodes\gpgpu
    computeNode: ['computeNode', 'count', 'workgroupSize',
],

    //node_modules\@types\three\examples\jsm\nodes\lighting
    analyticLightNode: ['light',
],
    aoNode: ['aoNode',
],
    environmentNode: ['envNode',
],
    hemisphereLightNode: ['light',
],
    irradianceNode: ['node',
],
    lightingContextNode: ['node', 'lightingModel', 'backdropNode', 'backdropAlphaNode',
],
    lightingNode: [],
    lightsNode: ['lightNodes',
],
    // lightUtils:LightUtilsProps,
    pointLightNode: ['light',
],
    spotLightNode: ['light',
],

    //node_modules\@types\three\examples\jsm\nodes\loaders
    nodeLoader: ['manager',
],
    nodeMaterialLoader: ['manager',
],
    nodeObjectLoader: ['manager',
],

    //node_modules\@types\three\examples\jsm\nodes\materials
    lineBasicNodeMaterialProps: ['parameters',
],
    // materialsProps:MaterialsProps,
    meshBasicNodeMaterialProps: ['parameters',
],
    meshNormalNodeMaterialProps: ['parameters',
],
    meshPhongNodeMaterialProps: ['parameters',
],
    meshPhysicalNodeMaterialProps: ['parameters',
],
    meshSSSNodeMaterialProps: ['parameters',
],
    meshStandardNodeMaterialProps: ['parameters',
],
    nodeMaterialProps: [],
    pointsNodeMaterialProps: ['parameters',
],
    shadowNodeMaterialProps: ['parameters',
],
    spriteNodeMaterialProps: ['parameters',
],

    //node_modules\@types\three\examples\jsm\nodes\materialx
    //node_modules\@types\three\examples\jsm\nodes\materialx\lib
    //node_modules\@types\three\examples\jsm\nodes\math

    condNode: ['condNode', 'ifNode', 'elseNode',
],
    hashNode: ['seedNode',
],
    mathNode: ['method', 'aNode', 'bNode', 'cNode',
],
    // mathUtils:MathUtilsProps,
    operatorNode: ['op', 'params',
],
    // triNoise3D:TriNoise3DProps,

    //node_modules\@types\three\examples\jsm\nodes\pmrem
    pmremNodeProps: ['value', 'uvNode', 'levelNode',
],

    //node_modules\@types\three\examples\jsm\nodes\procedural
    checkerNode: ['uvNode',
],

    //node_modules\@types\three\examples\jsm\nodes\shadernode

    //node_modules\@types\three\examples\jsm\nodes\utils
    arrayElementNode: ['node', 'indexNode',
],
    convertNode: ['node', 'convertTo',
],
    discardNode: ['condNode',
],
    equirectUVNode: ['dirNode',
],
    joinNode: ['nodes',
],
    matcapUVNode: [],
    maxMipLevelNode: ['textureNode',
],
    oscNode: ['method', 'timeNode',
],
    reflectorNode: ['parameters',
],
    remapNode: ['node', 'inLowNode', 'inHighNode', 'outLowNode', 'outHighNode',
],
    rotateNode: ['positionNode', 'rotationNode',
],
    rotateUVNode: ['uvNode', 'rotationNode', 'centerNode',
],
    splitNode: ['node', 'components',
],
    splitNode: ['node', 'components',
],
    spriteSheetUVNode: ['countNode', 'uvNode', 'frameNode',
],
    stoargeArrayElementNode: ['storageBufferNode', 'indexNode',
],
    timerNode: ['scope', 'scale', 'value',
],
    triplanarTexturesNode: ['textureXNode', 'textureYNode', 'textureZNode', 'scaleNode', 'positionNode', 'normalNode',
],

    //node_modules\@types\three\examples\jsm\objects
    groundedSkybox: ['map', 'height', 'radius', 'resolution',
],
    lensflare: [],
    marchingCubes: ['resolution', 'material', 'enableUvs', 'enableColors', 'maxPolyCount',
],
    quadMesh: ['material',
],
    reflector: ['geometry', 'options',
],
    reflectorForSSRPass: ['geometry', 'options',
],
    refractor: ['geometry', 'options',
],
    shadowMesh: ['mesh',
],
    sky: [],
    water: ['geometry', 'options',
],
    water2: ['geometry', 'options',
],

    //node_modules\@types\three\examples\jsm\physics

    //node_modules\@types\three\examples\jsm\postprocessing
    afterimagePass: ['damp',
],
    bloomPass: ['strength', 'kernelSize', 'sigma',
],
    bokehPass: ['scene', 'camera', 'params',
],
    clearPass: ['clearColor', 'clearAlpha',
],
    cubeTexturePass: ['camera', 'envMap', 'opacity',
],
    dotScreenPass: ['center', 'angle', 'scale',
],
    effectComposer: ['renderer', 'renderTarget',
],
    filmPass: ['intensity', 'grayscale',
],
    glitchPass: ['dt_size',
],
    gTAOPass: ['scene', 'camera', 'width', 'height', 'parameters',
],
    halftonePass: ['width', 'height', 'params',
],
    lutPass: ['params',
],
    maskPass: ['scene', 'camera',
],
    clearMaskPass: [],
    outlinePass: ['resolution', 'scene', 'camera', 'selectedObjects',
],
    outputPass: [],
    pass: [],
    renderPass: ['scene', 'camera', 'overrideMaterial', 'clearColor', 'clearAlpha',
],
    renderPixelatedPass: ['pixelSize', 'scene', 'camera', 'options',
],
    renderTransitionPass: ['sceneA', 'cameraA', 'sceneB', 'cameraB',
],
    saoPass: ['scene', 'camera', 'resolution',
],
    savePass: ['renderTarget',
],
    shaderPass: ['shader', 'textureID',
],
    smaaPass: ['width', 'height',
],
    ssaaRenderPass: ['scene', 'camera', 'clearColor', 'clearAlpha',
],
    ssaoPass: ['scene', 'camera', 'width', 'height', 'kernelSize',
],
    ssrPass: ['params',
],
    taaRenderPass: ['scene', 'camera', 'clearColor', 'clearAlpha',
],
    texturePass: ['map', 'opacity',
],
    unrealBloomPass: ['resolution', 'strength', 'radius', 'threshold',
],

    //node_modules\@types\three\examples\jsm\renderers
    css2DRenderer: ['parameters',
],
    css3DRenderer: ['parameters',
],
    projector: [],
    svgRenderer: [],

    //node_modules\@types\three\examples\jsm\renderers\common
    Backend: ['parameters',
],
    Color4: ['r', 'g', 'b', 'a',
],
    Info:[],
    PostProcessing: ['renderer', 'outputNode',
],
    Renderer: ['backend', 'parameters',
],
    StorageTexture: ['width', 'height',
],

    //node_modules\@types\three\examples\jsm\renderers\common\extras
    pmremGenerator: ['renderer',
],

    //node_modules\@types\three\examples\jsm\renderers\webgl
    webGLBackend: ['parameters',
],

    //node_modules\@types\three\examples\jsm\renderers\webgl\nodes
    slotNode: ['params',
],
    webGLNodeBuilder: ['object', 'renderer', 'shader',
],
    // webGLNodes:WebGLNodesProps,

    //node_modules\@types\three\examples\jsm\renderers\webgpu
    webGPUBackend: ['parameters',
],
    webGPURenderer: ['parameters',
],

    //node_modules\@types\three\examples\jsm\shaders
    //node_modules\@types\three\examples\jsm\textures
    flakesTexture: ['width', 'height',
],

    //node_modules\@types\three\examples\jsm\transpiler
    // aST:ASTProps,
    glslDecoder: [],
    shaderToyDecoder: [],
    transpiler: ['decoder', 'encoder',
],
    tslEncoder: [],

    //node_modules\@types\three\examples\jsm\utils
    //node_modules\@types\three\examples\jsm\webxr

    // arButton:ARButtonProps,
    oculusHandModel: ['controller', 'loader', 'onLoad',
],

    oculusHandPointerModel: ['hand', 'controller',
],
    // text2D:Text2DProps,
    vrButton: [],
    xrButton: [],
    xrControllerModelFactory: ['gltfLoader', 'onLoad',
],
    xrEstimatedLight: ['renderer', 'environmentEstimation',
],
    xrHandMeshModel: ['handModel', 'controller', 'path', 'handedness', 'loader', 'onLoad',
],
    xrHandModelFactory: ['gltfLoader', 'onLoad',
],
    xrHandPrimitiveModel: ['handModel', 'controller', 'path', 'handedness', 'options',
],
    xrPlanes: ['renderer',
],

    // primitive
    primitive: [],


    //light
    ambientLight: ['color', 'intensity',
],
    ambientLightProbe: ['color', 'intensity',
],
    directionalLight: ['color', 'intensity',
],
    directionalLightShadow: [] as any,
    hemisphereLight: ['skyColor', 'groundColor', 'intensity',
],
    hemisphereLightProbe: ['skyColor', 'groundColor', 'intensity',
],
    light: ['color', 'intensity',
],
    lightProbe: ['sh', 'intensity',
],
    lightShadow: ['camera',
],
    pointLight: ['color', 'intensity', 'distance', 'decay',
],
    // pointLightShadow: [], no constructor
    rectAreaLight: ['color', 'intensity', 'width', 'height',
],
    spotLight: ['color', 'intensity', 'distance', 'angle', 'penumbra', 'decay',
],
    // spotLightShadow: [], no constructor
    //loaders
    animationLoader: ['manager',
],
    audioLoader: ['manager',
],
    bufferGeometryLoader: ['manager',
],
    // cache: [], namespace
    compressedTextureLoader: ['manager',
],
    cubeTextureLoader: ['manager',
],
    dataTextureLoader: ['manager',
],
    fileLoader: ['manager',
],
    imageBitmapLoader: ['manager',
],
    imageLoader: ['manager',
],
    loader: ['manager',
],
    // loaderUtils: [], interface
    loadingManager: ['onLoad', 'onProgress', 'onError',
],
    materialLoader: ['manager',
],
    objectLoader: ['manager',
],
    textureLoader: ['manager',
],



}