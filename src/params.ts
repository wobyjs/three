export const param = {
    orbitControls: ["camera", "domElement", "enableDamping"],
    textGeometry: ["str", "parameters"],
    gltf: ["path"],
    //animations
    booleanKeyframeTrack: ["name", "times", "values"],
    colorKeyframeTrack: ["name", "times", "values", "interpolation"],
    numberKeyframeTrack: ["name", "times", "values", "interpolation"],
    quaternionKeyframeTrack: ["name", "times", "values", "interpolation"],
    stringKeyframeTrack: ["name", "times", "values", "interpolation"],
    vectorKeyframeTrack: ["name", "times", "values", "interpolation"],
    animationAction: ["mixer", "clip", "localRoot", "blendMode"],
    animationClip: ["name", "duration", "tracks", "blendMode"],
    animationMixer: ["root"],
    animationObjectGroup: ["...args"],
    animationUtils: [] as any,
    keyframeTrack: ["name", "times", "values", "interpolation"],
    propertyBinding: ["rootNode", "path", "parsedPath"],
    propertyMixer: ["binding", "typeName", "valueSize"],
    //audio
    audio: ["listener"],
    audioAnalyser: ["audio", "fftSize"],
    // audioContext: [], //namespace
    audioListener: [] as any,
    positionalAudio: ["listener"],
    //Cameras
    arrayCamera: ["cameras"],
    camera: [] as any,
    cubeCamera: ["near", "far", "renderTarget"],
    orthographicCamera: ["left", "right", "top", "bottom", "near", "far"],
    perspectiveCamera: ["fov", "aspect", "near", "far"],
    stereoCamera: [] as any,
    //core
    bufferAttribute: ["array", "itemSize", "normalized"],
    bufferGeometry: [] as any,
    clock: ["autostart"],
    eventDispatcher: [] as any,
    glBufferAttribute: ["buffer", "type", "itemSize", "elementSize", "count"],
    // instancedBufferAttribute: ["array", "itemSize", "normalized", "meshPerAttribute" = 1],
    instancedBufferGeometry: [] as any,
    // instancedInterleavedBuffer: ["array", "stride", "meshPerAttribute" = 1],
    interleavedBuffer: ["array", "stride"],
    // interleavedBufferAttribute: ["interleavedBuffer", "itemSize", "offset", "normalized" = false],
    layers: [] as any,
    object3D: [] as any,
    // raycaster: ["origin", "direction", "near" = 0, "far" = Infinity],
    // renderTarget: ["width" = 1, "height" = 1, "options" = {}],
    uniform: ["value"],
    uniformsGroup: [] as any,
    //extras
    curve: [] as any,
    curvePath: [] as any,
    // interpolations: [], functions
    path: ["points"],
    shape: ["points"],
    shapePath: [] as any,
    arcCurve: ["aX", "aY", "aRadius", "aStartAngle", "aEndAngle", "aClockwise"],
    catmullRomCurve3: ["points", "closed", "curveType", "tension"],
    cubicBezierCurve: ["v0", "v1", "v2", "v3"],
    cubicBezierCurve3: ["v0", "v1", "v2", "v3"],
    // curves: [], IMPORTS
    ellipseCurve: ["aX", "aY", "xRadius", "yRadius", "aStartAngle", "aEndAngle", "aClockwise", "aRotation"],
    lineCurve: ["v1", "v2"],
    lineCurve3: ["v1", "v2"],
    quadraticBezierCurve: ["v0", "v1", "v2"],
    quadraticBezierCurve3: ["v0", "v1", "v2"],
    splineCurve: ["points"],
    // dataUtils: [], FUNCTIONS
    // earcut: [], FUNCTIONS
    // imageUtils: [], FUNCTIONS
    pMREMGenerator: ["renderer"],
    // shapeUtils: [], FUNCTIONS
    //geometries
    boxGeometry: ["width", "height", "depth", "widthSegments", "heightSegments", "depthSegments"],
    capsuleGeometry: ["radius", "length", "capSegments", "radialSegments"],
    circleGeometry: ["radius", "segments", "thetaStart", "thetaLength"],
    coneGeometry: ["radius", "height", "radialSegments", "heightSegments", "openEnded", "thetaStart", "thetaLength"],
    cylinderGeometry: ["radiusTop", "radiusBottom", "height", "radialSegments", "heightSegments", "openEnded", "thetaStart", "thetaLength"],
    dodecahedronGeometry: ["radius", "detail"],
    edgesGeometry: ["geometry", "thresholdAngle"],
    extrudeGeometry: ["shapes", "options"],
    // geometries: [], IMPORTS
    icosahedronGeometry: ["radius", "detail"],
    latheGeometry: ["points", "segments", "phiStart", "phiLength"],
    octahedronGeometry: ["radius", "detail"],
    planeGeometry: ["width", "height", "widthSegments", "heightSegments"],
    polyhedronGeometry: ["vertices", "indices", "radius", "detail"],
    ringGeometry: ["innerRadius", "outerRadius", "thetaSegments", "phiSegments", "thetaStart", "thetaLength"],
    shapeGeometry: ["shapes", "curveSegments"],
    sphereGeometry: ["radius", "widthSegments", "heightSegments", "phiStart", "phiLength", "thetaStart", "thetaLength"],
    tetrahedronGeometry: ["radius", "detail"],
    torusGeometry: ["radius", "tube", "radialSegments", "tubularSegments", "arc"],
    torusKnotGeometry: ["radius", "tube", "tubularSegments", "radialSegments", "p", "q",],
    tubeGeometry: ["path", "tubularSegments", "radius", "radialSegments", "closed"],
    wireframeGeometry: ["geometry"],
    //helpers
    arrowHelper: ["dir", "origin", "length", "color", "headLength", "headWidth"],
    axesHelper: ["size"],
    box3Helper: ["box", "color"],
    boxHelper: ["object", "color"],
    cameraHelper: ["camera"],
    directionalLightHelper: ["light", "size", "color"],
    gridHelper: ["size", "divisions", "color1", "color2"],
    hemisphereLightHelper: ["light", "size", "color"],
    planeHelper: ["plane", "size", "hex"],
    pointLightHelper: ["light", "sphereSize", "color"],
    polarGridHelper: ["radius", "radial", "circles", "divisions", "color1", "color2"],
    skeletonHelper: ['object'],
    spotLightHelper: ["light", "color"],
    //light
    ambientLight: ["color", "intensity"],
    ambientLightProbe: ["color", "intensity"],
    directionalLight: ["color", "intensity"],
    directionalLightShadow: [] as any,
    hemisphereLight: ["skyColor", "groundColor", "intensity"],
    hemisphereLightProbe: ["skyColor", "groundColor", "intensity"],
    light: ["color", "intensity"],
    lightProbe: ["sh", "intensity"],
    lightShadow: ["camera"],
    pointLight: ["color", "intensity", "distance", "decay"],
    // pointLightShadow: [], no constructor
    rectAreaLight: ["color", "intensity", "width", "height"],
    spotLight: ["color", "intensity", "distance", "angle", "penumbra", "decay"],
    // spotLightShadow: [], no constructor
    //loaders
    animationLoader: ["manager"],
    audioLoader: ["manager"],
    bufferGeometryLoader: ["manager"],
    // cache: [], namespace
    compressedTextureLoader: ["manager"],
    cubeTextureLoader: ["manager"],
    dataTextureLoader: ["manager"],
    fileLoader: ["manager"],
    imageBitmapLoader: ["manager"],
    imageLoader: ["manager"],
    loader: ["manager"],
    // loaderUtils: [], interface
    loadingManager: ["onLoad", "onProgress", "onError"],
    materialLoader: ["manager"],
    objectLoader: ["manager"],
    textureLoader: ["manager"],
    //material
    lineBasicMaterial: ["parameters"],
    lineDashedMaterial: ["parameters"],
    material: [] as any,
    // materials: [], imports
    meshBasicMaterial: ["parameters"],
    meshDepthMaterial: ["parameters"],
    meshDistanceMaterial: ["parameters"],
    meshLambertMaterial: ["parameters"],
    meshMatcapMaterial: ["parameters"],
    meshNormalMaterial: ["parameters"],
    meshPhongMaterial: ["parameters"],
    meshPhysicalMaterial: ["parameters"],
    meshStandardMaterial: ["parameters"],
    meshToonMaterial: ["parameters"],
    pointsMaterial: ["parameters"],
    rawShaderMaterial: ["parameters"],
    shaderMaterial: ["parameters"],
    shadowMaterial: ["parameters"],
    spriteMaterial: ["parameters"],
    //math
    cubicInterpolant: ["parameterPositions", "samplesValues", "sampleSize", "resultBuffer"],
    discreteInterpolant: ["parameterPositions", "samplesValues", "sampleSize", "resultBuffer"],
    linearInterpolant: ["parameterPositions", "samplesValues", "sampleSize", "resultBuffer"],
    quaternionLinearInterpolant: ["parameterPositions", "samplesValues", "sampleSize", "resultBuffer"],
    box2: ["min", "max"],
    box3: ["min", "max"],
    color: [["color"], ["r", "g", "b"]],
    // colorManagement: [], //namespace
    cylindrical: ["radius", "theta", "y"],
    euler: ["x", "y", "z", "order"],
    frustum: ["p0", "p1", "p2", "p3", "p4", "p5"],
    interpolant: ["parameterPositions", "samplesValues", "sampleSize", "resultBuffer"],
    line3: ["start", "end"],
    // mathUtils: [], //functions
    matrix3: [] as any,
    matrix4: [] as any,
    plane: ["normal", "constant"],
    quaternion: ["x", "y", "z", "w"],
    ray: ["origin", "direction"],
    sphere: ["center", "radius"],
    spherical: ["radius", "phi", "theta"],
    sphericalHarmonics3: [] as any,
    triangle: ["a", "b", "c"],
    vector2: ["x", "y"],
    vector3: ["x", "y", "z"],
    vector4: ["x", "y", "z", "w"],
    //objects
    bone: [] as any,
    group: [] as any,
    instancedMesh: ["geometry", "material", "count"],
    line: ["geometry", "material"],
    lineLoop: ['geometry', "material"],
    lineSegments: ['geometry', "material"],
    LOD: [] as any,
    mesh: ['geometry', "material"],
    points: ['geometry', "material"],
    skeleton: ["bones", "boneInverses"],
    skinnedMesh: ['geometry', "material", "useVertexTexture"],
    sprite: ["material"],
    //renderers
    // shaderChunk:,
    // shaderLib:,
    // uniformsLib:,
    // uniformsUtils:,
    //webgl
    webGLAttributes: ["gl", "capabilities"],
    webGLBindingStates: ["gl", "extensions", "attributes", "capabilities"],
    webGLBufferRenderer: ["gl", "extensions", "info", "capabilities"],
    webGLCapabilities: ["gl", "extensions", "parameters"],
    webGLClipping: ["properties"],
    webGlCubeMaps: ["renderer"],
    webGLCubeUVMaps: ["renderer"],
    webGLExtensions: ["gl"],
    webGLGeometries: ["gl", "attributes", "info"],
    webGLIndexedBufferRenderer: ["gl", "extensions", "info", "capabilities"],
    webGLInfo: ["gl"],
    webGLLights: ["extensions", "capabilities"],
    webGLObjects: ["gl", "geometries", "attributes", "info"],
    webGLPrograms: ["renderer", "cacheKey", "parameters"],
    webGlProperties: [] as any,
    webGLRenderLists: ["properties"],
    // webGLShaders:[],function
    webGlShadowMap: ["_renderer", "_objects", "_capabilities"],
    webGLState: [] as any,
    webGLTextures: ["gl", "extensions", "state", "properties", "capabilities", "utils", "info"],
    webGLUniforms: ["gl", "program"],
    // webGLUniformsGroups: [], functions
    webGLUtils: ["gl", "extensions", "capabilities"],
    webXRController: [] as any,
    webXRManager: ["renderer", "gl"],
    webGL1Renderer: ["parameters"],
    webGL3DRenderTarget: ["width", "height", "depth"],
    webGLArrayRenderTarget: ["width", "height", "depth"],
    webGLCubeRenderTarget: ["size", "options"],
    webGLMultipleRenderTarget: ["width", "height", "count", "options"],
    webGLRenderer: ["parameters"],
    webGLRenderTarget: ["width", "height", "options"],
    //scenes
    fog: ["color", "near", "far"],
    fogExp2: ["color", "density"],
    scene: [] as any,
    //textures
    canvasTexture: ["canvas", "mapping", "wrapS", "wrapT", "magFilter", "minFilter", "format", "type", "anisotropy"],
    compressedArrayTexture: ["mipmaps", "width", "height", "depth", "format", "type"],
    compressedTexture: ["mipmaps", "width", "height", "format", "type", "mapping", "wrapS", "wrapT", "magFilter", "minFilter", "anisotropy", "colorSpace"],
    cubeTexture: ["images", "mapping", "wrapS", "wrapT", "magFilter", "minFilter", "format", "type", "anisotropy", "colorSpace"],
    data3DTexture: ["data", "width", "height", "depth"],
    dataArrayTexture: ["data", "width", "height", "depth"],
    dataTexture: ["data", "width", "height", "format", "type", "mapping", "wrapS", "wrapT", "magFilter", "minFilter", "anisotropy", "colorSpace"],
    depthTexture: ["width", "height", "type", "mapping", "wrapS", "wrapT", "magFilter", "minFilter", "anisotropy", "format"],
    framebufferTexture: ["width", "height"],
    source: ["data"],
    texture: ["image", "mapping", "wrapS", "wrapT", "magFilter", "minFilter", "format", "type", "anisotropy", "colorSpace"],
    // types:[],
    videoTexture: ["video", "mapping", "wrapS", "wrapT", "magFilter", "minFilter", "format", "type", "anisotropy"],
}

export const paramTypes = {
    orbitControls: ["camera", "domElement", "enableDamping"],
    textGeometry: ["str", "parameters"],
    gltf: ["path"],
    //animations
    booleanKeyframeTrack: ["name", "times", "values"],
    colorKeyframeTrack: ["name", "times", "values", "interpolation"],
    numberKeyframeTrack: ["name", "times", "values", "interpolation"],
    quaternionKeyframeTrack: ["name", "times", "values", "interpolation"],
    stringKeyframeTrack: ["name", "times", "values", "interpolation"],
    vectorKeyframeTrack: ["name", "times", "values", "interpolation"],
    animationAction: ["mixer", "clip", "localRoot", "blendMode"],
    animationClip: ["name", "duration", "tracks", "blendMode"],
    animationMixer: ["root"],
    animationObjectGroup: ["...args"],
    animationUtils: [] as any,
    keyframeTrack: ["name", "times", "values", "interpolation"],
    propertyBinding: ["rootNode", "path", "parsedPath"],
    propertyMixer: ["binding", "typeName", "valueSize"],
    //audio
    audio: ["listener"],
    audioAnalyser: ["audio", "fftSize"],
    // audioContext: [], //namespace
    audioListener: [] as any,
    positionalAudio: ["listener"],
    //Cameras
    arrayCamera: ["cameras"],
    camera: [] as any,
    cubeCamera: ["near", "far", "renderTarget"],
    orthographicCamera: ["left", "right", "top", "bottom", "near", "far"],
    perspectiveCamera: ["fov", "aspect", "near", "far"],
    stereoCamera: [] as any,
    //core
    bufferAttribute: ["array", "itemSize", "normalized"],
    bufferGeometry: [] as any,
    clock: ["autostart"],
    eventDispatcher: [] as any,
    glBufferAttribute: ["buffer", "type", "itemSize", "elementSize", "count"],
    // instancedBufferAttribute: ["array", "itemSize", "normalized", "meshPerAttribute" = 1],
    instancedBufferGeometry: [] as any,
    // instancedInterleavedBuffer: ["array", "stride", "meshPerAttribute" = 1],
    interleavedBuffer: ["array", "stride"],
    // interleavedBufferAttribute: ["interleavedBuffer", "itemSize", "offset", "normalized" = false],
    layers: [] as any,
    object3D: [] as any,
    // raycaster: ["origin", "direction", "near" = 0, "far" = Infinity],
    // renderTarget: ["width" = 1, "height" = 1, "options" = {}],
    uniform: ["value"],
    uniformsGroup: [] as any,
    //extras
    curve: [] as any,
    curvePath: [] as any,
    // interpolations: [], functions
    path: ["points"],
    shape: ["points"],
    shapePath: [] as any,
    arcCurve: ["aX", "aY", "aRadius", "aStartAngle", "aEndAngle", "aClockwise"],
    catmullRomCurve3: ["points", "closed", "curveType", "tension"],
    cubicBezierCurve: ["v0", "v1", "v2", "v3"],
    cubicBezierCurve3: ["v0", "v1", "v2", "v3"],
    // curves: [], IMPORTS
    ellipseCurve: ["aX", "aY", "xRadius", "yRadius", "aStartAngle", "aEndAngle", "aClockwise", "aRotation"],
    lineCurve: ["v1", "v2"],
    lineCurve3: ["v1", "v2"],
    quadraticBezierCurve: ["v0", "v1", "v2"],
    quadraticBezierCurve3: ["v0", "v1", "v2"],
    splineCurve: ["points"],
    // dataUtils: [], FUNCTIONS
    // earcut: [], FUNCTIONS
    // imageUtils: [], FUNCTIONS
    pMREMGenerator: ["renderer"],
    // shapeUtils: [], FUNCTIONS
    //geometries
    boxGeometry: ["width", "height", "depth", "widthSegments", "heightSegments", "depthSegments"],
    capsuleGeometry: ["radius", "length", "capSegments", "radialSegments"],
    circleGeometry: ["radius", "segments", "thetaStart", "thetaLength"],
    coneGeometry: ["radius", "height", "radialSegments", "heightSegments", "openEnded", "thetaStart", "thetaLength"],
    cylinderGeometry: ["radiusTop", "radiusBottom", "height", "radialSegments", "heightSegments", "openEnded", "thetaStart", "thetaLength"],
    dodecahedronGeometry: ["radius", "detail"],
    edgesGeometry: ["geometry", "thresholdAngle"],
    extrudeGeometry: ["shapes", "options"],
    // geometries: [], IMPORTS
    icosahedronGeometry: ["radius", "detail"],
    latheGeometry: ["points", "segments", "phiStart", "phiLength"],
    octahedronGeometry: ["radius", "detail"],
    planeGeometry: ["width", "height", "widthSegments", "heightSegments"],
    polyhedronGeometry: ["vertices", "indices", "radius", "detail"],
    ringGeometry: ["innerRadius", "outerRadius", "thetaSegments", "phiSegments", "thetaStart", "thetaLength"],
    shapeGeometry: ["shapes", "curveSegments"],
    sphereGeometry: ["radius", "widthSegments", "heightSegments", "phiStart", "phiLength", "thetaStart", "thetaLength"],
    tetrahedronGeometry: ["radius", "detail"],
    torusGeometry: ["radius", "tube", "radialSegments", "tubularSegments", "arc"],
    torusKnotGeometry: ["radius", "tube", "tubularSegments", "radialSegments", "p", "q",],
    tubeGeometry: ["path", "tubularSegments", "radius", "radialSegments", "closed"],
    wireframeGeometry: ["geometry"],
    //helpers
    arrowHelper: ["dir", "origin", "length", "color", "headLength", "headWidth"],
    axesHelper: ["size"],
    box3Helper: ["box", "color"],
    boxHelper: ["object", "color"],
    cameraHelper: ["camera"],
    directionalLightHelper: ["light", "size", "color"],
    gridHelper: ["size", "divisions", "color1", "color2"],
    hemisphereLightHelper: ["light", "size", "color"],
    planeHelper: ["plane", "size", "hex"],
    pointLightHelper: ["light", "sphereSize", "color"],
    polarGridHelper: ["radius", "radial", "circles", "divisions", "color1", "color2"],
    skeletonHelper: ['object'],
    spotLightHelper: ["light", "color"],
    //light
    ambientLight: ["color", "intensity"],
    ambientLightProbe: ["color", "intensity"],
    directionalLight: ["color", "intensity"],
    directionalLightShadow: [] as any,
    hemisphereLight: ["skyColor", "groundColor", "intensity"],
    hemisphereLightProbe: ["skyColor", "groundColor", "intensity"],
    light: ["color", "intensity"],
    lightProbe: ["sh", "intensity"],
    lightShadow: ["camera"],
    pointLight: ["color", "intensity", "distance", "decay"],
    // pointLightShadow: [], no constructor
    rectAreaLight: ["color", "intensity", "width", "height"],
    spotLight: ["color", "intensity", "distance", "angle", "penumbra", "decay"],
    // spotLightShadow: [], no constructor
    //loaders
    animationLoader: ["manager"],
    audioLoader: ["manager"],
    bufferGeometryLoader: ["manager"],
    // cache: [], namespace
    compressedTextureLoader: ["manager"],
    cubeTextureLoader: ["manager"],
    dataTextureLoader: ["manager"],
    fileLoader: ["manager"],
    imageBitmapLoader: ["manager"],
    imageLoader: ["manager"],
    loader: ["manager"],
    // loaderUtils: [], interface
    loadingManager: ["onLoad", "onProgress", "onError"],
    materialLoader: ["manager"],
    objectLoader: ["manager"],
    textureLoader: ["manager"],
    //material
    lineBasicMaterial: ["parameters"],
    lineDashedMaterial: ["parameters"],
    material: [] as any,
    // materials: [], imports
    meshBasicMaterial: ["parameters"],
    meshDepthMaterial: ["parameters"],
    meshDistanceMaterial: ["parameters"],
    meshLambertMaterial: ["parameters"],
    meshMatcapMaterial: ["parameters"],
    meshNormalMaterial: ["parameters"],
    meshPhongMaterial: ["parameters"],
    meshPhysicalMaterial: ["parameters"],
    meshStandardMaterial: ["parameters"],
    meshToonMaterial: ["parameters"],
    pointsMaterial: ["parameters"],
    rawShaderMaterial: ["parameters"],
    shaderMaterial: ["parameters"],
    shadowMaterial: ["parameters"],
    spriteMaterial: ["parameters"],
    //math
    cubicInterpolant: ["parameterPositions", "samplesValues", "sampleSize", "resultBuffer"],
    discreteInterpolant: ["parameterPositions", "samplesValues", "sampleSize", "resultBuffer"],
    linearInterpolant: ["parameterPositions", "samplesValues", "sampleSize", "resultBuffer"],
    quaternionLinearInterpolant: ["parameterPositions", "samplesValues", "sampleSize", "resultBuffer"],
    box2: ["min", "max"],
    box3: ["min", "max"],
    color: [["color"], ["r", "g", "b"]],
    // colorManagement: [], //namespace
    cylindrical: ["radius", "theta", "y"],
    euler: ["x", "y", "z", "order"],
    frustum: ["p0", "p1", "p2", "p3", "p4", "p5"],
    interpolant: ["parameterPositions", "samplesValues", "sampleSize", "resultBuffer"],
    line3: ["start", "end"],
    // mathUtils: [], //functions
    matrix3: [] as any,
    matrix4: [] as any,
    plane: ["normal", "constant"],
    quaternion: ["x", "y", "z", "w"],
    ray: ["origin", "direction"],
    sphere: ["center", "radius"],
    spherical: ["radius", "phi", "theta"],
    sphericalHarmonics3: [] as any,
    triangle: ["a", "b", "c"],
    vector2: ["x", "y"],
    vector3: ["x", "y", "z"],
    vector4: ["x", "y", "z", "w"],
    //objects
    bone: [] as any,
    group: [] as any,
    instancedMesh: ["geometry", "material", "count"],
    line: ["geometry", "material"],
    lineLoop: ['geometry', "material"],
    lineSegments: ['geometry', "material"],
    LOD: [] as any,
    mesh: ['geometry', "material"],
    points: ['geometry', "material"],
    skeleton: ["bones", "boneInverses"],
    skinnedMesh: ['geometry', "material", "useVertexTexture"],
    sprite: ["material"],
    //renderers
    // shaderChunk:,
    // shaderLib:,
    // uniformsLib:,
    // uniformsUtils:,
    //webgl
    webGLAttributes: ["gl", "capabilities"],
    webGLBindingStates: ["gl", "extensions", "attributes", "capabilities"],
    webGLBufferRenderer: ["gl", "extensions", "info", "capabilities"],
    webGLCapabilities: ["gl", "extensions", "parameters"],
    webGLClipping: ["properties"],
    webGlCubeMaps: ["renderer"],
    webGLCubeUVMaps: ["renderer"],
    webGLExtensions: ["gl"],
    webGLGeometries: ["gl", "attributes", "info"],
    webGLIndexedBufferRenderer: ["gl", "extensions", "info", "capabilities"],
    webGLInfo: ["gl"],
    webGLLights: ["extensions", "capabilities"],
    webGLObjects: ["gl", "geometries", "attributes", "info"],
    webGLPrograms: ["renderer", "cacheKey", "parameters"],
    webGlProperties: [] as any,
    webGLRenderLists: ["properties"],
    // webGLShaders:[],function
    webGlShadowMap: ["_renderer", "_objects", "_capabilities"],
    webGLState: [] as any,
    webGLTextures: ["gl", "extensions", "state", "properties", "capabilities", "utils", "info"],
    webGLUniforms: ["gl", "program"],
    // webGLUniformsGroups: [], functions
    webGLUtils: ["gl", "extensions", "capabilities"],
    webXRController: [] as any,
    webXRManager: ["renderer", "gl"],
    webGL1Renderer: ["parameters"],
    webGL3DRenderTarget: ["width", "height", "depth"],
    webGLArrayRenderTarget: ["width", "height", "depth"],
    webGLCubeRenderTarget: ["size", "options"],
    webGLMultipleRenderTarget: ["width", "height", "count", "options"],
    webGLRenderer: ["parameters"],
    webGLRenderTarget: ["width", "height", "options"],
    //scenes
    fog: ["color", "near", "far"],
    fogExp2: ["color", "density"],
    scene: [] as any,
    //textures
    canvasTexture: ["canvas", "mapping", "wrapS", "wrapT", "magFilter", "minFilter", "format", "type", "anisotropy"],
    compressedArrayTexture: ["mipmaps", "width", "height", "depth", "format", "type"],
    compressedTexture: ["mipmaps", "width", "height", "format", "type", "mapping", "wrapS", "wrapT", "magFilter", "minFilter", "anisotropy", "colorSpace"],
    cubeTexture: ["images", "mapping", "wrapS", "wrapT", "magFilter", "minFilter", "format", "type", "anisotropy", "colorSpace"],
    data3DTexture: ["data", "width", "height", "depth"],
    dataArrayTexture: ["data", "width", "height", "depth"],
    dataTexture: ["data", "width", "height", "format", "type", "mapping", "wrapS", "wrapT", "magFilter", "minFilter", "anisotropy", "colorSpace"],
    depthTexture: ["width", "height", "type", "mapping", "wrapS", "wrapT", "magFilter", "minFilter", "anisotropy", "format"],
    framebufferTexture: ["width", "height"],
    source: ["data"],
    texture: ["image", "mapping", "wrapS", "wrapT", "magFilter", "minFilter", "format", "type", "anisotropy", "colorSpace"],
    // types:[],
    videoTexture: ["video", "mapping", "wrapS", "wrapT", "magFilter", "minFilter", "format", "type", "anisotropy"],
}